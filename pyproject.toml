[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "markdown-it-py"
dynamic = ["version"]
description = "Python port of markdown-it. Markdown parsing, done right!"
readme = "README.md"
authors = [{name = "Chris Sewell", email = "chrisj_sewell@hotmail.com"}]
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
     "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup",
]
keywords = ["markdown", "lexer", "parser", "commonmark", "markdown-it"]
requires-python = ">=3.8"
dependencies = [
    "mdurl~=0.1",
]

[project.urls]
Homepage = "https://github.com/executablebooks/markdown-it-py"
Documentation = "https://markdown-it-py.readthedocs.io"

[project.optional-dependencies]
code_style = ["pre-commit~=3.0"]
compare = [
    "commonmark~=0.9",
    "markdown~=3.4",
    "mistletoe~=1.0",
    "mistune~=2.0",
    "panflute~=2.3",
]
linkify = ["linkify-it-py>=1,<3"]
plugins = ["mdit-py-plugins"]
rtd = [
    "mdit-py-plugins",
    "myst-parser",
    "pyyaml",
    "sphinx",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinx_book_theme",
    "jupyter_sphinx",
]
testing = [
    "coverage",
    "pytest",
    "pytest-cov",
    "pytest-regressions",
]
benchmarking = [
    "psutil",
    "pytest",
    "pytest-benchmark",
]
profiling = ["gprof2dot"]

[project.scripts]
markdown-it = "markdown_it.cli.parse:main"

[tool.flit.module]
name = "markdown_it"

[tool.flit.sdist]
exclude = [
    "docs/",
    "tests/",
    "benchmarking/"
]

[tool.isort]
profile = "black"
force_sort_within_sections = true

[tool.ruff]
line-length = 100
extend-select = ["B0", "C4", "ICN", "ISC", "N", "RUF", "SIM"]
extend-ignore = ["ISC003", "N802", "N803", "N806", "N816", "RUF003"]

[tool.mypy]
show_error_codes = true
warn_unused_ignores = true
warn_redundant_casts = true
strict = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_calls = false
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = ["tests.test_plugins.*", "markdown.*"]
ignore_errors = true

[[tool.mypy.overrides]]
module = ["markdown.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
xfail_strict = true
